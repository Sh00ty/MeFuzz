// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entities "orchestration/entities"

	mock "github.com/stretchr/testify/mock"
)

// FuzzInfoDB is an autogenerated mock type for the fuzzInfoDB type
type FuzzInfoDB struct {
	mock.Mock
}

// AddFuzzer provides a mock function with given fields: fuzzer
func (_m *FuzzInfoDB) AddFuzzer(fuzzer entities.Fuzzer) error {
	ret := _m.Called(fuzzer)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.Fuzzer) error); ok {
		r0 = rf(fuzzer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AddTestcases provides a mock function with given fields: idList, tcList, evalDataList
func (_m *FuzzInfoDB) AddTestcases(idList []entities.FuzzerID, tcList []entities.Testcase, evalDataList []entities.EvaluatingData) {
	_m.Called(idList, tcList, evalDataList)
}

type mockConstructorTestingTNewFuzzInfoDB interface {
	mock.TestingT
	Cleanup(func())
}

// NewFuzzInfoDB creates a new instance of FuzzInfoDB. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFuzzInfoDB(t mockConstructorTestingTNewFuzzInfoDB) *FuzzInfoDB {
	mock := &FuzzInfoDB{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
